/* This file was generated by SableCC (http://www.sablecc.org/). */

package nl.openedge.gaps.support.gapspath.node;

import nl.openedge.gaps.support.gapspath.analysis.Analysis;

public final class AStructGroupTail extends PStructGroupTail {

    private TSlash _slash_;

    private TId _id_;

    public AStructGroupTail() {
    }

    public AStructGroupTail(TSlash _slash_, TId _id_) {
        setSlash(_slash_);

        setId(_id_);

    }

    public Object clone() {
        return new AStructGroupTail((TSlash) cloneNode(_slash_), (TId) cloneNode(_id_));
    }

    public void apply(Switch sw) {
        ((Analysis) sw).caseAStructGroupTail(this);
    }

    public TSlash getSlash() {
        return _slash_;
    }

    public void setSlash(TSlash node) {
        if (_slash_ != null) {
            _slash_.parent(null);
        }

        if (node != null) {
            if (node.parent() != null) {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _slash_ = node;
    }

    public TId getId() {
        return _id_;
    }

    public void setId(TId node) {
        if (_id_ != null) {
            _id_.parent(null);
        }

        if (node != null) {
            if (node.parent() != null) {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _id_ = node;
    }

    public String toString() {
        return "" + toString(_slash_) + toString(_id_);
    }

    void removeChild(Node child) {
        if (_slash_ == child) {
            _slash_ = null;
            return;
        }

        if (_id_ == child) {
            _id_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild) {
        if (_slash_ == oldChild) {
            setSlash((TSlash) newChild);
            return;
        }

        if (_id_ == oldChild) {
            setId((TId) newChild);
            return;
        }

    }
}