/* This file was generated by SableCC (http://www.sablecc.org/). */

package nl.openedge.gaps.support.gapspath.analysis;

import java.util.Hashtable;

import nl.openedge.gaps.support.gapspath.node.AAndOptionsPartTail;
import nl.openedge.gaps.support.gapspath.node.AArraySelect;
import nl.openedge.gaps.support.gapspath.node.AAttribute;
import nl.openedge.gaps.support.gapspath.node.AGroupPath;
import nl.openedge.gaps.support.gapspath.node.AOptions;
import nl.openedge.gaps.support.gapspath.node.AOptionsBlock;
import nl.openedge.gaps.support.gapspath.node.AOptionsPart;
import nl.openedge.gaps.support.gapspath.node.AOrOptionsPartTail;
import nl.openedge.gaps.support.gapspath.node.AParam;
import nl.openedge.gaps.support.gapspath.node.AParamGroup;
import nl.openedge.gaps.support.gapspath.node.AParamPath;
import nl.openedge.gaps.support.gapspath.node.ARootStructGroup;
import nl.openedge.gaps.support.gapspath.node.AStructGroup;
import nl.openedge.gaps.support.gapspath.node.AStructGroupTail;
import nl.openedge.gaps.support.gapspath.node.EOF;
import nl.openedge.gaps.support.gapspath.node.Node;
import nl.openedge.gaps.support.gapspath.node.Start;
import nl.openedge.gaps.support.gapspath.node.TAnd;
import nl.openedge.gaps.support.gapspath.node.TAt;
import nl.openedge.gaps.support.gapspath.node.TBlank;
import nl.openedge.gaps.support.gapspath.node.TColon;
import nl.openedge.gaps.support.gapspath.node.TEq;
import nl.openedge.gaps.support.gapspath.node.TId;
import nl.openedge.gaps.support.gapspath.node.TLBrace;
import nl.openedge.gaps.support.gapspath.node.TLBracket;
import nl.openedge.gaps.support.gapspath.node.TMinus;
import nl.openedge.gaps.support.gapspath.node.TOr;
import nl.openedge.gaps.support.gapspath.node.TQuote;
import nl.openedge.gaps.support.gapspath.node.TRBrace;
import nl.openedge.gaps.support.gapspath.node.TRBracket;
import nl.openedge.gaps.support.gapspath.node.TSlash;

public class AnalysisAdapter implements Analysis
{

	/**
	 * in.
	 */
	private Hashtable in;

	/**
	 * out.
	 */
	private Hashtable out;

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#getIn(nl.openedge.gaps.support.gapspath.node.Node)
	 */
	public Object getIn(Node node)
	{
		if (in == null)
		{
			return null;
		}

		return in.get(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#setIn(nl.openedge.gaps.support.gapspath.node.Node, java.lang.Object)
	 */
	public void setIn(Node node, Object in)
	{
		if (this.in == null)
		{
			this.in = new Hashtable(1);
		}

		if (in != null)
		{
			this.in.put(node, in);
		}
		else
		{
			this.in.remove(node);
		}
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#getOut(nl.openedge.gaps.support.gapspath.node.Node)
	 */
	public Object getOut(Node node)
	{
		if (out == null)
		{
			return null;
		}

		return out.get(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#setOut(nl.openedge.gaps.support.gapspath.node.Node, java.lang.Object)
	 */
	public void setOut(Node node, Object out)
	{
		if (this.out == null)
		{
			this.out = new Hashtable(1);
		}

		if (out != null)
		{
			this.out.put(node, out);
		}
		else
		{
			this.out.remove(node);
		}
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseStart(nl.openedge.gaps.support.gapspath.node.Start)
	 */
	public void caseStart(Start node)
	{
		defaultCase(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseAGroupPath(nl.openedge.gaps.support.gapspath.node.AGroupPath)
	 */
	public void caseAGroupPath(AGroupPath node)
	{
		defaultCase(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseAParamPath(nl.openedge.gaps.support.gapspath.node.AParamPath)
	 */
	public void caseAParamPath(AParamPath node)
	{
		defaultCase(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseARootStructGroup(nl.openedge.gaps.support.gapspath.node.ARootStructGroup)
	 */
	public void caseARootStructGroup(ARootStructGroup node)
	{
		defaultCase(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseAStructGroup(nl.openedge.gaps.support.gapspath.node.AStructGroup)
	 */
	public void caseAStructGroup(AStructGroup node)
	{
		defaultCase(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseAStructGroupTail(nl.openedge.gaps.support.gapspath.node.AStructGroupTail)
	 */
	public void caseAStructGroupTail(AStructGroupTail node)
	{
		defaultCase(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseAParamGroup(nl.openedge.gaps.support.gapspath.node.AParamGroup)
	 */
	public void caseAParamGroup(AParamGroup node)
	{
		defaultCase(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseAParam(nl.openedge.gaps.support.gapspath.node.AParam)
	 */
	public void caseAParam(AParam node)
	{
		defaultCase(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseAArraySelect(nl.openedge.gaps.support.gapspath.node.AArraySelect)
	 */
	public void caseAArraySelect(AArraySelect node)
	{
		defaultCase(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseAAttribute(nl.openedge.gaps.support.gapspath.node.AAttribute)
	 */
	public void caseAAttribute(AAttribute node)
	{
		defaultCase(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseAOptions(nl.openedge.gaps.support.gapspath.node.AOptions)
	 */
	public void caseAOptions(AOptions node)
	{
		defaultCase(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseAOptionsBlock(nl.openedge.gaps.support.gapspath.node.AOptionsBlock)
	 */
	public void caseAOptionsBlock(AOptionsBlock node)
	{
		defaultCase(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseAAndOptionsPartTail(nl.openedge.gaps.support.gapspath.node.AAndOptionsPartTail)
	 */
	public void caseAAndOptionsPartTail(AAndOptionsPartTail node)
	{
		defaultCase(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseAOrOptionsPartTail(nl.openedge.gaps.support.gapspath.node.AOrOptionsPartTail)
	 */
	public void caseAOrOptionsPartTail(AOrOptionsPartTail node)
	{
		defaultCase(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseAOptionsPart(nl.openedge.gaps.support.gapspath.node.AOptionsPart)
	 */
	public void caseAOptionsPart(AOptionsPart node)
	{
		defaultCase(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseTAnd(nl.openedge.gaps.support.gapspath.node.TAnd)
	 */
	public void caseTAnd(TAnd node)
	{
		defaultCase(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseTOr(nl.openedge.gaps.support.gapspath.node.TOr)
	 */
	public void caseTOr(TOr node)
	{
		defaultCase(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseTLBracket(nl.openedge.gaps.support.gapspath.node.TLBracket)
	 */
	public void caseTLBracket(TLBracket node)
	{
		defaultCase(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseTRBracket(nl.openedge.gaps.support.gapspath.node.TRBracket)
	 */
	public void caseTRBracket(TRBracket node)
	{
		defaultCase(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseTLBrace(nl.openedge.gaps.support.gapspath.node.TLBrace)
	 */
	public void caseTLBrace(TLBrace node)
	{
		defaultCase(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseTRBrace(nl.openedge.gaps.support.gapspath.node.TRBrace)
	 */
	public void caseTRBrace(TRBrace node)
	{
		defaultCase(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseTSlash(nl.openedge.gaps.support.gapspath.node.TSlash)
	 */
	public void caseTSlash(TSlash node)
	{
		defaultCase(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseTAt(nl.openedge.gaps.support.gapspath.node.TAt)
	 */
	public void caseTAt(TAt node)
	{
		defaultCase(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseTColon(nl.openedge.gaps.support.gapspath.node.TColon)
	 */
	public void caseTColon(TColon node)
	{
		defaultCase(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseTId(nl.openedge.gaps.support.gapspath.node.TId)
	 */
	public void caseTId(TId node)
	{
		defaultCase(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseTEq(nl.openedge.gaps.support.gapspath.node.TEq)
	 */
	public void caseTEq(TEq node)
	{
		defaultCase(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseTQuote(nl.openedge.gaps.support.gapspath.node.TQuote)
	 */
	public void caseTQuote(TQuote node)
	{
		defaultCase(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseTBlank(nl.openedge.gaps.support.gapspath.node.TBlank)
	 */
	public void caseTBlank(TBlank node)
	{
		defaultCase(node);
	}

	/**
	 * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseEOF(nl.openedge.gaps.support.gapspath.node.EOF)
	 */
	public void caseEOF(EOF node)
	{
		defaultCase(node);
	}

	/**
	 * defaultCase.
	 *
	 * @param node
	 */
	public void defaultCase(Node node)
	{
	}

    /**
     * @see nl.openedge.gaps.support.gapspath.analysis.Analysis#caseTMinus(nl.openedge.gaps.support.gapspath.node.TMinus)
     */
    public void caseTMinus(TMinus node) {
        defaultCase(node);
    }
}